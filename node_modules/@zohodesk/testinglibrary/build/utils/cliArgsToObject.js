"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cliArgsToObject = cliArgsToObject;
exports.objectToCliArgs = objectToCliArgs;
function isMatchForOption(option) {
  return /^--./.test(option);
}

/**
 * Converts an array of command-line arguments into an object.
 *
 * @param {string[]} cliArgs - An array of command-line arguments.
 * @param {boolean} [isKeyNeedToBeAdded=true] - Indicates whether the keys should be added to the resulting object.
 * @returns {Object} An object representing the command-line arguments, where keys are argument names (without '--') and values are argument values.
 * If `isKeyNeedToBeAdded` is set to `false`, only values are included in the object with numeric indexes as keys.
 *
 * @example
 * // Example usage:
 * const args = ['--port=8080', '--verbose', 'input.txt'];
 * const result = cliArgsToObject(args);
 * // result will be: { port: '8080', verbose: true }
 */
// eslint-disable-next-line no-unused-vars
function cliArgsToObject(cliArgs, isKeyNeedToBeAdded) {
  const processEnv = {};
  cliArgs.forEach(option => {
    if (isMatchForOption(option)) {
      const equIndex = option.indexOf('=');
      let key = option.slice(2, equIndex);
      let value = option.slice(equIndex + 1);
      if (equIndex === -1) {
        key = option.slice(2);
        value = true;
      }
      processEnv[key] = value;
      if (!isNaN(parseInt(value))) {
        processEnv[key] = parseInt(value);
      }
    }
  });
  return processEnv;
}

/**
 * Converts an object to an array of command-line arguments.
 *
 * @param {Object} objectToBeConverted - The object to be converted to command-line arguments.
 * @param {(string|function(string): boolean)} [isKeyNeedToBeAdded=true] - A string representing a key, or a function that determines whether a key should be added to the resulting array.
 * @returns {string[]} An array of command-line arguments generated from the object's key-value pairs. Keys are transformed into argument names (with '--') and values are added as argument values.
 *
 * @example
 * // Example usage:
 * const options = { port: 8080, verbose: true, input: 'input.txt' };
 * const args = objectToCliArgs(options);
 * // args will be: ['--port=8080', '--verbose', '--input=input.txt']
 */
function objectToCliArgs(objectToBeConverted, isKeyNeedToBeAdded) {
  const argsArray = [];
  Object.keys(objectToBeConverted).forEach(key => {
    if (isKeyNeedToBeAdded(key)) {
      if (typeof objectToBeConverted[key] === 'boolean' && objectToBeConverted[key]) {
        argsArray.push(`--${key}`);
      } else {
        argsArray.push(`--${key}=${objectToBeConverted[key]}`);
      }
    }
  });
  return argsArray;
}