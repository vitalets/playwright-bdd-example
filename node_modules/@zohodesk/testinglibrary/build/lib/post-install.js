"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _path = _interopRequireDefault(require("path"));
var _child_process = require("child_process");
var _logger = require("../utils/logger");
var _rootPath = require("../utils/rootPath");
// We are skipping the download of browsers when NODE_ENV is set to production or flag SKIP_BROWSER_DOWNLOAD is set to true

let isSkipDownloadingBrowsers = Boolean(process.env.SKIP_BROWSER_DOWNLOAD);
let isProductionMode = process.env.NODE_ENV === 'production';
if (isSkipDownloadingBrowsers || isProductionMode) {
  _logger.Logger.log(_logger.Logger.INFO_TYPE, 'Skipping browsers download in production mode');
} else {
  const playwrightPath = _path.default.resolve((0, _rootPath.getExecutableBinaryPath)('playwright'));
  const command = playwrightPath;
  const args = ['install'];
  _logger.Logger.log(_logger.Logger.INFO_TYPE, `Downloading browsers for running tests`);
  const childProcess = (0, _child_process.spawn)(command, args, {
    stdio: 'inherit'
  });
  childProcess.on('error', error => {
    _logger.Logger.log(_logger.Logger.FAILURE_TYPE, error);
  });
}