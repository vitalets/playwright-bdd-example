"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _RunnerHelper = _interopRequireDefault(require("../../../../../core/playwright/runner/RunnerHelper"));
var _Runner = _interopRequireDefault(require("../../../../../core/playwright/runner/Runner"));
var _Configuration = _interopRequireDefault(require("../../../../../core/playwright/configuration/Configuration"));
jest.mock('child_process');
jest.mock('../../../../../utils/logger');
describe('SpawnRunner', () => {
  let spawnRunner;
  const runnerObj = new _Runner.default();
  beforeEach(() => {
    const config = new _Configuration.default({});
    config.add("bddMode", true);
    runnerObj.setConfig(config);
    runnerObj.setTagArgs(["--headed"]);
    spawnRunner = _RunnerHelper.default.createRunner('spawn', runnerObj);
  });
  describe('run', () => {
    it('should call runPreprocessing when bddMode is true', () => {
      const runPreprocessingSpy = jest.spyOn(spawnRunner, 'runPreprocessing').mockResolvedValue();
      const runPlaywrightSpy = jest.spyOn(spawnRunner, 'runPlaywright').mockResolvedValue();
      spawnRunner.run();
      expect(runPreprocessingSpy).toHaveBeenCalled();
    });
  });
});