"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _page = require("../../../../../core/playwright/builtInFixtures/page");
var _executionContext = _interopRequireDefault(require("../../../../../core/playwright/builtInFixtures/executionContext"));
jest.mock('../../../../../core/playwright/builtInFixtures/page');
describe('executionContext', () => {
  test('should pass actorInfo with details from getCustomAccountDetails to use', async () => {
    const mockTags = ['tag1', 'tag2'];
    const mockActorInfo = {
      id: '1',
      edition: 'enterprise',
      orgName: 'orgName',
      profile: 'admin',
      email: 'xxx.x+uat@zohotest.com'
    };
    _page.getCustomAccountDetails.mockReturnValue(mockActorInfo);
    const use = jest.fn();
    await _executionContext.default.executionContext({
      $tags: mockTags
    }, use);
    expect(_page.getCustomAccountDetails).toHaveBeenCalledWith(mockTags);
    expect(use).toHaveBeenCalledWith({
      actorInfo: mockActorInfo
    });
  });
});