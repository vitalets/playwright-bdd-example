"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getAuthFileDirectory = getAuthFileDirectory;
exports.loadCookiesIfPresent = loadCookiesIfPresent;
exports.verifyIfCookieFileExists = verifyIfCookieFileExists;
var _path = _interopRequireDefault(require("path"));
var _fs = require("fs");
var _readConfigFile = require("../../readConfigFile");
var _logger = require("../../../../utils/logger");
/* eslint-disable no-console */

function getAuthFileDirectory() {
  const {
    uatDirectory
  } = (0, _readConfigFile.generateConfigFromFile)();
  return _path.default.resolve(_path.default.join(uatDirectory, 'playwright', '.auth'));
}
function verifyIfCookieFileExists(authFile) {
  return (0, _fs.existsSync)(authFile);
}
function convertCookiesToParse(cookies, authFilePath) {
  try {
    return JSON.parse(cookies);
  } catch (err) {
    _logger.Logger.error(err);
    throw new Error(` Error while parsing cookies ${err} \n${_path.default.resolve(process.cwd(), authFilePath)} File is Empty`);
  }
}
async function loadCookiesIfPresent(page, authFile) {
  if (verifyIfCookieFileExists(authFile)) {
    const fileContent = (0, _fs.readFileSync)(authFile);
    const stroageState = convertCookiesToParse(fileContent, authFile);
    if (stroageState.cookies) {
      await page.context().addCookies(stroageState.cookies);
    }
  }
}