const path = require('path');
const { existsSync } = require('fs');
const appPath = process.cwd();

const appGlobals = path.resolve(appPath, '__testUtils__', 'globals.js');

module.exports = {
  reporters: [
    "default",
    [
      "jest-html-reporter",
      {
        outputPath: "unit_reports/unit-report.html",
        pageTitle: "Unit Report"
      }
    ]
  ],
  rootDir: process.cwd(),
  testEnvironment: 'node',

  setupFilesAfterEnv: [
    existsSync(appGlobals) && appGlobals,
    path.resolve(__dirname, 'src', 'core', 'jest', 'setup', 'index.js')
  ].filter(Boolean),

  transform: {
    '^.+\\.(js|jsx)$': path.resolve(
      __dirname,
      'src',
      'core',
      'jest',
      'preprocessor',
      'jsPreprocessor.js'
    ),
    '^.+\\.jsx?$': 'babel-jest'
  },
  
  testMatch: ['**/__tests__/**/*.test.js'],

  modulePathIgnorePatterns: ['/build/'],

  transformIgnorePatterns: [
    '/node_modules/',
    '/src/setup-folder-structure/samples/'
  ],

  coveragePathIgnorePatterns:[
    '/src/setup-folder-structure/samples/'
  ],

  testPathIgnorePatterns: [
    '/node_modules/',
    '/build/',
    '/uat/'
  ],

  watchPathIgnorePatterns: [
    '/node_modules/',
    '/build/'
  ],

  clearMocks: true,
  resetMocks: false,

  collectCoverage: true,
  collectCoverageFrom: ['src/**/*.js'],
  coverageDirectory: './build/cov',
  coverageReporters: ['lcov', 'json', 'html', 'json-summary', 'text'],
  // coverageThreshold: {
  //   global: {
  //     branches: 100,
  //     functions: 100,
  //     lines: 100,
  //     statements: 100
  //   }
  // },
  globals: {
    __DEVELOPMENT__: true,
    __DOCS__: false,
    __TEST__: true
  }
};